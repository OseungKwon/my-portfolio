{"version":3,"file":"static/js/899.01be1b0b.chunk.js","mappings":"kLAGMA,GAAUC,EAAAA,EAAAA,IAAH,0EAKPC,EAAQC,EAAAA,GAAAA,IAAH,2YAYIH,GAQTI,EAAUD,EAAAA,GAAAA,IAAH,8VAuEb,UA7CmC,SAAC,GAAwB,IAAtBE,EAAqB,EAArBA,OAC9BC,EAAeD,EAAOE,OAAS,EACrC,GAAwCC,EAAAA,EAAAA,UAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,QAAyB,MA2B1C,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgBC,aAAY,WAPhCL,EAFED,GAAgBH,EAEF,EAEAG,EAAe,KAO9B,KACH,OAAO,WACLO,cAAcF,MAEf,CAACL,KAEJI,EAAAA,EAAAA,YAAU,WACJF,EAASM,UACXN,EAASM,QAAQC,MAAMC,WAAa,uBACpCR,EAASM,QAAQC,MAAME,UAAvB,sBAAkDX,EAAlD,WAED,CAACA,KAGF,SAACP,EAAD,WACE,SAACE,EAAD,WACE,gBAAKiB,IAAKV,EAAV,SACGN,EAAOiB,KAAI,SAACC,GAAD,OACV,gBAAKC,UAAU,OAAf,UACE,gBAAKC,IAAKF,EAAOG,IAAI","sources":["components/Carousel.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst moveTop = keyframes`\r\n  0%{ bottom: -2rem; };\r\n  100%{ bottom: 0px; };\r\n`;\r\n\r\nconst Space = styled.div`\r\n  position: relative;\r\n  bottom: -2rem;\r\n  flex: 6;\r\n  background-color: #fff;\r\n  margin: 0 3rem;\r\n  display: flex;\r\n  //flex-direction: column;\r\n  height: 28rem;\r\n  border-radius: 7px;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 5px 7px rgba(0, 0, 0, 0.07);\r\n  animation: ${moveTop} 0.5s 0.2s forwards;\r\n\r\n  @media (max-width: 1500px) {\r\n    flex: 5;\r\n    margin: 3rem;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  background: #fff;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  /* white-space: nowrap; */\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  img {\r\n    border-radius: 7px;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  & .area {\r\n    width: 100%;\r\n    display: flex;\r\n    height: 100%;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\ntype PropsT = {\r\n  images: string[];\r\n};\r\n\r\nconst Carousel: React.FC<PropsT> = ({ images }: PropsT) => {\r\n  const TOTAL_SLIDES = images.length - 1;\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const slideRef = useRef<HTMLInputElement>(null);\r\n\r\n  const nextSlide = () => {\r\n    if (currentSlide >= TOTAL_SLIDES) {\r\n      // 더 이상 넘어갈 슬라이드가 없으면 슬라이드를 초기화합니다.\r\n      setCurrentSlide(0);\r\n    } else {\r\n      setCurrentSlide(currentSlide + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const imageInterval = setInterval(() => {\r\n      nextSlide();\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(imageInterval);\r\n    };\r\n  }, [currentSlide]);\r\n\r\n  useEffect(() => {\r\n    if (slideRef.current) {\r\n      slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n      slideRef.current.style.transform = `translateX(-${currentSlide}00%)`;\r\n    }\r\n  }, [currentSlide]);\r\n\r\n  return (\r\n    <Space>\r\n      <Wrapper>\r\n        <div ref={slideRef}>\r\n          {images.map((image) => (\r\n            <div className=\"area\">\r\n              <img src={image} alt=\"img\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Wrapper>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"names":["moveTop","keyframes","Space","styled","Wrapper","images","TOTAL_SLIDES","length","useState","currentSlide","setCurrentSlide","slideRef","useRef","useEffect","imageInterval","setInterval","clearInterval","current","style","transition","transform","ref","map","image","className","src","alt"],"sourceRoot":""}